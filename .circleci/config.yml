version: 2.1
executors:
  node10:
    docker:
    - image: circleci/node:10-buster
      environment:
        NPM_CONFIG_PREFIX: "~/.npm-global"
    working_directory: ~/repo

commands:
  setup:
    steps:
    - checkout
    - restore_cache:
        keys:
        - v2-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
    - run:
        name: install latest npm
        command: sudo npm -g install npm
    - run:
        name: Installing Dependencies
        command: npm install
    - save_cache:
        paths:
        - node_modules
        key: v2-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
    - run:
        name: prepare test git user
        command: git config --global user.email "circleci@example.com" && git config --global user.name "CircleCi Build"

orbs:
    helix-smoke-tests: adobe/helix-smoke-tests@0.1.0
    win: circleci/windows-tools@0.1.0

jobs:
  build_win:
    parallelism: 1
    executor: win/default
    steps:
      - run: git config --global core.autocrlf false
      - run:
          name: prepare test git user
          command: git config --global user.email "you@example.com"
      - run:
          name: prepare test git user
          command: git config --global user.name "Your Name"
      - checkout
      - run: choco install nodejs-lts --version=10.16.3
      - run: npm install
      - run: mkdir junit

      # test & get code coverage
      - run:
          name: Running Tests
          command: npm run test-win
          environment:
            MOCHA_FILE: junit/test-results.xml
          when: always

      - store_test_results:
          path: junit

      - store_artifacts:
          path: junit

  build:
    executor: node10

    steps:
    - setup
        # run tests!
    - run: mkdir junit
    - run:
        name: prepare test git user
        command: git config --global user.email "you@example.com" && git config --global user.name "Your Name"

    # test & get code coverage
    - run:
        name: Test and Code Coverage
        command: npm run test-ci
        environment:
          MOCHA_FILE: junit/test-results.xml

    - store_test_results:
        path: junit

    - store_artifacts:
        path: junit

  release:
    executor: node10

    steps:
    - setup
    - run:
        name: revert changes to package-lock.json
        command: git checkout -- package-lock.json

    - run:
        name: Semantic Release
        command: npm run semantic-release

workflows:
  version: 2
  build:
    jobs:
    # publish pre-releases on master
    - release:
        requires:
        - build
        - build_win
        filters:
          branches:
            only: master
    - build
    - build_win
  smoke:
    jobs:
        - helix-smoke-tests/run:
            remote_repo: adobe/helix-continuous

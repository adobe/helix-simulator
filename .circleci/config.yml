version: 2
jobs:
  build:
    docker:
    - image: circleci/node:8-stretch
    working_directory: ~/repo
    environment:
      NPM_CONFIG_PREFIX: ~/.npm-global

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v3-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}

    - run:
        name: install npm 6.4.0
        command: sudo npm -g install npm@6.4.0

    - run:
        name: Installing Dependencies
        command: npm install

    - save_cache:
        paths:
        - node_modules
        key: v3-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}

        # run tests!
    - run: mkdir junit
    - run:
        name: prepare test git user
        command: git config --global user.email "you@example.com" && git config --global user.name "Your Name"
    - run:
        name: Lint
        command: npm run lint

    # test & get code coverage
    - run:
        name: Getting Code Coverage
        command: circleci tests glob test/test*.js | circleci tests split --split-by=timings | xargs ./node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha -- -R mocha-junit-reporter --exit && npx codecov
        environment:
          MOCHA_FILE: junit/test-results.xml

    - store_test_results:
        path: junit

    - store_artifacts:
        path: junit

    - run:
        name: Call helix-cli smoke test
        command: |
            curl \
            --user ${SMOKE_TEST_TOKEN}: \
            --header "Content-Type: application/json" \
            --data "{\"build_parameters\": {\"CIRCLE_JOB\": \"smoke\", \"GDM_MODULE_BRANCHES\": { \"petridish\": \"${CIRCLE_BRANCH}\"}}}" \
            --request POST "https://circleci.com/api/v1.1/project/github/adobe/helix-cli/tree/issues/289" > smoke_job.json

    - run:
        name: Wait for smoke job to complete and fetch job exit code
        command: |
            smoke_job_build_num=$(jq '.build_num' < smoke_job.json)
            circle_api=https://circleci.com/api/v1.1
            build_url="${circle_api}/project/github/adobe/helix-cli/${smoke_job_build_num}"

            echo "Will wait now for smoke tests job execution. See build ${build_url}"
            echo ""
            RUNNING=true
                while [ $RUNNING == true ]; do
                sleep 10;
                status=$(curl --silent --header "Accept: application/json" "${build_url}?circle-token=$SMOKE_TEST_TOKEN" | tee smoke_result.json | jq -r '.status');
                echo 'running queued scheduled not_running' | grep --silent "$status" || RUNNING=false;
                echo -n "."
            done
            echo "end of the loop: ${status}"
            
            if [[ $status == 'fixed success' ]]
            then
                exit_code=0
            else
                exit_code=1
            fi

            echo ""
            echo "Smoke tests ${build_url} finished with status ${status}"
            echo ""
            echo "exit_code: ${exit_code}"
            echo ""
            if (($exit_code != 0));
            then
                output_url=$(jq -r '.steps[] | select(.name == ("Running Smoke Tests")) | .actions[0].output_url' smoke_result.json);
                echo "Error output_url: ${output_url}"
                error_message=$(curl --silent --compressed --header "Accept: application/json" "${output_url}" | jq -r '.[0].message');
                echo "Smoke test error message: \n"
                echo "${error_message}"
                echo ""
            fi

            exit $exit_code

  publish-pre-release:
    docker:
    # specify the version you desire here
    - image: circleci/node:8-stretch

    working_directory: ~/repo

    steps:
    - checkout

    - restore_cache:
        keys:
        - v3-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}

    - run:
        name: prepare test git user
        command: git config --global user.email "circleci@example.com" && git config --global user.name "CircleCi Build"

    - run:
        name: install npm 6.4.0
        command: sudo npm -g install npm@6.4.0

    - run:
        name: install
        command: npm install

    - run:
        name: revert changes to package-lock.json
        command: git checkout -- package-lock.json

    - run:
        name: configure npm registry
        command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

    - run:
        name: version pre-release
        command: npm version prerelease --preid=pre -m "Release %s [ci skip]"
        environment:
          MOCHA_FILE: junit/test-results.xml

    - store_test_results:
        path: junit

    # unfortunately we cannot create a release commit with no tag with `npm version`, so we need to delete it here again
    - run:
        name: delete pre-release tag
        command: npm run delete-git-tag

    - run:
        name: publish pre-release
        command: npm publish --tag next --access public

workflows:
  version: 2
  build:
    jobs:
    # publish pre-releases on master
    - publish-pre-release:
        requires:
        - build
        filters:
          branches:
            only: master
    - build
